name: terraform-ci
description: Runs various Terraform commands as part of a workflow

inputs:
  run-lint:
    description: 'Flag to enable terraform linting as part of the action'
    required: false
    default: 'true'
  run-plan:
    description: 'Flag to enable terraform plan as part of the action'
    required: false
    default: 'true'
  run-apply:
    description: 'Flag to enable terraform apply as part of the action'
    required: false
    default: 'false'
  terraform-dir:
    description: 'Directory of terraform files'
    required: false
    default: 'terraform'
  terraform-version:
    description: 'Terraform version to use'
    required: true
  terraform-environment:
    description: 'Environment config to use [dev/prod]'
    required: true
  aws-access-key-id:
    description: 'AWS Access Key ID'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key'
    required: true
  aws-region:
    description: 'AWS Region'
    required: true

runs:
  using: composite
  steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    - name: Configure Terraform Binary
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.terraform-version }}
    - if: ${{ inputs.run-lint == 'true' }}
      name: Lint Terraform code
      run: terraform fmt -check -recursive ${{ inputs.terraform-dir }}
      shell: bash
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - name: Terraform init
      run: terraform init -backend-config config/${{ inputs.terraform-environment }}
      shell: bash
      working-directory: ${{ inputs.terraform-dir }}
    - if: ${{ inputs.run-plan == 'true' }}
      name: Terraform plan
      run: terraform plan -var-file=vars/${{ inputs.terraform-environment }}.tfvars
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
    - if: ${{ inputs.run-apply == 'true' }}
      name: Terraform apply
      run: terraform apply -auto-approve -var-file=vars/${{ inputs.terraform-environment }}.tfvars
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
